TODO HOMEWORK CHECKLIST:
PROGRAMMING TASKS:
    SongDatabase.java
        [X] Complete the 'addSong' method
        [X] Throw an IllegalArgumentException when a playlist of the given name already exists in the 'createPlaylist' method
        [X] Complete the 'getPlaylist' method
        [X] Complete the 'addSongToPlaylist' method
        [X] Complete the 'findSongByName' method
        [X] Complete the 'findSongByArtist' method
    MP3Player.java
        [X] Run the 'main' method and try multiple work flows

TEST TASKS:
    SongDatabaseTest.java
        [X] Write the 'testAddDeleteSong' test method
        [X] Write the 'testAddGetDeletePlaylist' test method
        [X] Run every other test

SHORT ANSWERS:
    // TODO FOR HOMEWORK: Answer each question, and note many don't have a 'right answer' so just answer honestly
    [X] The MP3Player is a console application, what features do you wish were added?
        // ANSWER HERE: Song Sort / Play Previous / Loop Current Song

    [X] Pick any feature you mentioned in the last question. Do you think you could implement that feature with your current knowledge?
        If yes explain the basic thought processing of adding that feature, if not explain why.
        // ANSWER HERE: Loop Current Song, under "playSong(Song song)".
                            Will place "currentlyPlaying" within a do while loop and will provide a specific condition on when it will be terminated.

    [X] What is a loop?
        // ANSWER HERE: Iterates the part of the program once or more than once, depending on the looping statement.

    [X] Write what each of these loops does in your own words:
        // FOR LOOP: A loop that can be used if you know exactly how many times you want the code block to loop.
        // WHILE LOOP: A loop that will only loop and will continue to loop the code block as long as the specified condition returns true.
        // DO WHILE: A loop that will loop the code block at least once even the specified condition returns false.
                        Like while loop, it will continue to loop as long as the condition returns true.

    [X] Why were 'infinite loops' used in this project? (See UserHelperMethods.displayOptionsAndWaitForValidOption(String[] options) for a reference)
        // ANSWER HERE: An infinite loop is used to ensure the user selects a valid option

    [X] This project has 3 packages (models, resources, and utils). Describe each one.
        // MODELS: This contains classes and methods that are all specific within this program.
        // RESOURCES: This contains "public static final" variable declaration,
                        which means its values are always the same and will never changed.
        // UTILS: This contains helper methods which are not specific to any class.
                        Can be reusable not only on this program but to other program with the same logic.